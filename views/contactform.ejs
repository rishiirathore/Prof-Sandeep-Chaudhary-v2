

  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Request Form</title>
  <link rel="stylesheet" href="contactform.css">


  <div class="container">
    <div class="form-card">
      <h1 class="form-title">Write Your Query</h1>
      
      <% if (locals.successMessage) { %>
        <div class="alert success-alert" role="alert">
          <p><%= successMessage %></p>
        </div>
      <% } %>
      
      <form id="requestForm">
        <div class="form-field">
          <label for="name" class="form-label">Name</label>
          <input type="text" id="name" name="name" required class="form-input">
        </div>
        
        <div class="form-field">
          <label for="email" class="form-label">Email</label>
          <input type="email" id="email" name="email" required class="form-input">
        </div>
        
        <div class="form-field">
          <label for="contact" class="form-label">Contact Number</label>
          <input type="tel" id="contact" name="contact" required class="form-input">
        </div>
        
        <div class="form-field">
          <label for="description" class="form-label">Query/Description</label>
          <textarea id="description" name="description" rows="4" required class="form-textarea"></textarea>
        </div>
        
        <div class="form-field">
          <button type="submit" class="submit-button">Submit Request</button>
        </div>
      </form>
      
      <div id="formStatus" class="status-message"></div>
    </div>
  </div>
  
  <script>
    document.getElementById('requestForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const formData = {
        name: document.getElementById('name').value,
        email: document.getElementById('email').value,
        contact: document.getElementById('contact').value,
        description: document.getElementById('description').value
      };
      
      try {
        const response = await fetch('/api/requests', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(formData)
        });
        
        const result = await response.json();
        
        if (response.ok) {
          const statusDiv = document.getElementById('formStatus');
          statusDiv.textContent = 'Request submitted successfully!';
          statusDiv.className = 'status-message status-success visible';
          
          // Reset form
          document.getElementById('requestForm').reset();
          
          // Hide success message after 3 seconds
          setTimeout(() => {
            statusDiv.className = 'status-message';
          }, 3000);
        } else {
          throw new Error(result.message || 'Failed to submit request');
        }
      } catch (error) {
        const statusDiv = document.getElementById('formStatus');
        statusDiv.textContent = error.message;
        statusDiv.className = 'status-message status-error visible';
      }
    });

    // Optional: Add theme toggle functionality
    // Uncomment this to add a theme toggle button
    /*
    const themeToggle = document.createElement('button');
    themeToggle.className = 'theme-toggle';
    themeToggle.textContent = 'ðŸŒ“';
    document.body.appendChild(themeToggle);
    
    themeToggle.addEventListener('click', () => {
      const currentTheme = document.documentElement.getAttribute('data-theme') || 'dark';
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      document.documentElement.setAttribute('data-theme', newTheme);
    });
    */
  </script>

