

  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Request Form</title>
  <style>
    :root {
      /* Default is dark mode */
      --primary-color: #5ab9a8;
      --background-color: #20232a;
      --text-color: #ffffff;
      --secondary-bg: #292d36;
      --footer-bg: #191c22;
      --header-bg: #ffffff;
      --header-text: #333333;
      --card-bg: #292d36;
      --border-color: #444;
      --success-bg: rgba(51, 179, 141, 0.2);
      --success-border: #33B38D;
      --success-text: #33B38D;
      --error-bg: rgba(220, 38, 38, 0.2);
      --error-border: #dc2626;
      --error-text: #ef4444;
      --input-focus: #5ab9a8;
    }

    /* Light theme */
    html[data-theme="light"] {
      --primary-color: #33B38D;
      --background-color: #f5f5f7;
      --text-color: #333;
      --secondary-bg: #ffffff;
      --footer-bg: #e5e5e7;
      --header-bg: #ffffff;
      --header-text: #333333;
      --card-bg: #ffffff;
      --border-color: #ddd;
      --success-bg: rgba(51, 179, 141, 0.1);
      --success-text: #0f766e;
      --error-bg: rgba(220, 38, 38, 0.1);
      --error-text: #b91c1c;
    }

    body {
      background-color: var(--background-color);
      color: var(--text-color);
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
      margin: 0;
      padding: 0;
      transition: background-color 0.3s ease;
    }

    .container {
      max-width: 480px;
      margin: 2rem auto;
      padding: 1rem;
    }

    .form-card {
      background-color: var(--card-bg);
      border-radius: 0.75rem;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);
      padding: 1.5rem;
      border: 1px solid var(--border-color);
      transition: all 0.3s ease;
    }

    .form-card:hover {
      box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1), 0 4px 6px rgba(0, 0, 0, 0.05);
    }

    .form-title {
      color: var(--text-color);
      font-size: 1.5rem;
      font-weight: 700;
      text-align: center;
      margin-bottom: 1.5rem;
    }

    .form-field {
      margin-bottom: 1.25rem;
    }

    .form-label {
      display: block;
      font-size: 0.875rem;
      font-weight: 500;
      margin-bottom: 0.5rem;
      color: var(--text-color);
    }

    .form-input,
    .form-textarea {
      width: 100%;
      padding: 0.75rem;
      border-radius: 0.5rem;
      border: 1px solid var(--border-color);
      background-color: var(--secondary-bg);
      color: var(--text-color);
      font-size: 1rem;
      transition: border-color 0.2s ease, box-shadow 0.2s ease;
      outline: none;
      box-sizing: border-box;
    }

    .form-input:focus,
    .form-textarea:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(90, 185, 168, 0.2);
    }

    .form-textarea {
      min-height: 120px;
      resize: vertical;
    }

    .submit-button {
      display: block;
      width: 100%;
      padding: 0.75rem 1rem;
      background-color: var(--primary-color);
      color: white;
      border: none;
      border-radius: 0.5rem;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      transition: background-color 0.2s ease, transform 0.1s ease;
    }

    .submit-button:hover {
      background-color: #4ca899;
    }

    .submit-button:active {
      transform: translateY(1px);
    }

    .alert {
      padding: 1rem;
      border-radius: 0.5rem;
      margin-bottom: 1rem;
    }

    .success-alert {
      background-color: var(--success-bg);
      border-left: 4px solid var(--success-border);
      color: var(--success-text);
    }

    .error-alert {
      background-color: var(--error-bg);
      border-left: 4px solid var(--error-border);
      color: var(--error-text);
    }

    .status-message {
      text-align: center;
      margin-top: 1rem;
      padding: 0.75rem;
      border-radius: 0.5rem;
      font-weight: 500;
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .status-message.visible {
      opacity: 1;
    }

    .status-success {
      background-color: var(--success-bg);
      color: var(--success-text);
    }

    .status-error {
      background-color: var(--error-bg);
      color: var(--error-text);
    }

    /* Theme toggle button - optional addition */
    .theme-toggle {
      position: absolute;
      top: 1rem;
      right: 1rem;
      background: transparent;
      border: none;
      color: var(--text-color);
      cursor: pointer;
      font-size: 1rem;
    }
  </style>


  <div class="container">
    <div class="form-card">
      <h1 class="form-title">Write Your Query</h1>
      
      <% if (locals.successMessage) { %>
        <div class="alert success-alert" role="alert">
          <p><%= successMessage %></p>
        </div>
      <% } %>
      
      <form id="requestForm">
        <div class="form-field">
          <label for="name" class="form-label">Name</label>
          <input type="text" id="name" name="name" required class="form-input">
        </div>
        
        <div class="form-field">
          <label for="email" class="form-label">Email</label>
          <input type="email" id="email" name="email" required class="form-input">
        </div>
        
        <div class="form-field">
          <label for="contact" class="form-label">Contact Number</label>
          <input type="tel" id="contact" name="contact" required class="form-input">
        </div>
        
        <div class="form-field">
          <label for="description" class="form-label">Query/Description</label>
          <textarea id="description" name="description" rows="4" required class="form-textarea"></textarea>
        </div>
        
        <div class="form-field">
          <button type="submit" class="submit-button">Submit Request</button>
        </div>
      </form>
      
      <div id="formStatus" class="status-message"></div>
    </div>
  </div>
  
  <script>
    document.getElementById('requestForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const formData = {
        name: document.getElementById('name').value,
        email: document.getElementById('email').value,
        contact: document.getElementById('contact').value,
        description: document.getElementById('description').value
      };
      
      try {
        const response = await fetch('/api/requests', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(formData)
        });
        
        const result = await response.json();
        
        if (response.ok) {
          const statusDiv = document.getElementById('formStatus');
          statusDiv.textContent = 'Request submitted successfully!';
          statusDiv.className = 'status-message status-success visible';
          
          // Reset form
          document.getElementById('requestForm').reset();
          
          // Hide success message after 3 seconds
          setTimeout(() => {
            statusDiv.className = 'status-message';
          }, 3000);
        } else {
          throw new Error(result.message || 'Failed to submit request');
        }
      } catch (error) {
        const statusDiv = document.getElementById('formStatus');
        statusDiv.textContent = error.message;
        statusDiv.className = 'status-message status-error visible';
      }
    });

    // Optional: Add theme toggle functionality
    // Uncomment this to add a theme toggle button
    /*
    const themeToggle = document.createElement('button');
    themeToggle.className = 'theme-toggle';
    themeToggle.textContent = 'ðŸŒ“';
    document.body.appendChild(themeToggle);
    
    themeToggle.addEventListener('click', () => {
      const currentTheme = document.documentElement.getAttribute('data-theme') || 'dark';
      const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
      document.documentElement.setAttribute('data-theme', newTheme);
    });
    */
  </script>

