<%- include('partials/header') %>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta name="description"
    content="Extension Activities of Prof. Sandeep Chaudhary - Government Advisory Roles, International Contributions, and National Contributions in Civil Engineering and Sustainable Construction" />
  <meta name="keywords"
    content="Prof. Sandeep Chaudhary, Extension Activities, Government Advisory, International Contributions, National Contributions, Civil Engineering, Sustainable Construction, IIT Indore" />
  <meta name="author" content="Prof. Sandeep Chaudhary" />
  <meta name="robots" content="index, follow" />
  <meta property="og:title" content="Extension Activities - Prof. Sandeep Chaudhary" />
  <meta property="og:description"
    content="Professional contributions and advisory roles of Prof. Sandeep Chaudhary in government, international, and national organizations" />
  <meta property="og:type" content="website" />
  <meta property="og:url" content="https://your-domain.com/extension" />
  <meta property="og:image" content="/images/iitlogo.jpg" />
  <link rel="canonical" href="https://your-domain.com/extension" />
  <link rel="stylesheet" href="extension.css">

  <!-- Main Content -->
  <div class="main-wrapper" itemscope itemtype="https://schema.org/Person">
    <div class="container">
      <!-- Main Section Title -->
      <div class="section-title">
        <h1 itemprop="name">Extension Activities</h1>
        <div class="title-underline"></div>
      </div>

      <!-- Main Content Grid -->
      <div class="content-grid">
        <% 
        // Group activities by role
        const roleGroups = {};
        
        // Create icon mapping for different roles
        const roleIcons = {
          "Government Advisory Roles": "fas fa-landmark",
          "International Contributions": "fas fa-globe",
          "National Contributions": "fas fa-flag"
        };
        
        activities.forEach(activity => {
          if (!roleGroups[activity.role]) {
            roleGroups[activity.role] = [];
          }
          roleGroups[activity.role].push(activity);
        });
        
        // Loop through each role group
        Object.keys(roleGroups).forEach(role => { 
        %>
          <div class="content-card" itemscope itemtype="https://schema.org/Role">
            <div class="card-header">
              <div class="header-icon" aria-hidden="true">
                <i class="<%= roleIcons[role] || 'fas fa-briefcase' %>"></i>
              </div>
              <h2><%= role %></h2>
            </div>
            <div class="card-body">
              <ul class="elegant-list" role="list">
                <% roleGroups[role].forEach(activity => { %>
                  <li itemscope itemtype="https://schema.org/Role" role="listitem">
                    <span class="position-title" itemprop="roleName"><%= activity.title %></span>
                    <span class="position-org" itemprop="organization"><%= activity.description %></span>
                    <% if (activity.location) { %>
                      <span class="position-details" itemprop="location"><%= activity.location %></span>
                    <% } %>
                  </li>
                <% }); %>
              </ul>
            </div>
          </div>
        <% }); %>
      </div>
    </div>
  </div>

  <%- include('partials/footer') %>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Add staggered animation effect to list items
        const listItems = document.querySelectorAll(".elegant-list li");
        listItems.forEach((item, index) => {
          item.style.opacity = "0";
          item.style.transform = "translateY(20px)";
          item.style.transition = "opacity 0.5s ease, transform 0.5s ease";

          setTimeout(() => {
            item.style.opacity = "1";
            item.style.transform = "translateY(0)";
          }, 100 * index);
        });

        // Add hover effect to cards
        const cards = document.querySelectorAll(".content-card");
        cards.forEach((card) => {
          const header = card.querySelector(".card-header");
          const icon = card.querySelector(".header-icon");

          card.addEventListener("mouseenter", function () {
            header.style.background = "var(--primary-color)";
            header.style.color = "white";
            icon.style.background = "white";
            icon.querySelector("i").style.color = "var(--primary-color)";
          });

          card.addEventListener("mouseleave", function () {
            header.style.background = "var(--secondary-bg)";
            header.style.color = "var(--text-color)";
            icon.style.background = "var(--primary-color)";
            icon.querySelector("i").style.color = "white";
          });
        });
      });
    </script>